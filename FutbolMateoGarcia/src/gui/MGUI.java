/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import persistencia.abs.PersistenciaGeneral;
import persistencia.implhibernate.PersistenciaHibernate;
import persistencia.impljdbc.PersistenciaJdbc;


/**
 *
 * @author alumno
 */
public class MGUI extends javax.swing.JFrame {
	
	static PersistenciaGeneral con;
	
	private static void inicializar() {
		try {
			BufferedReader bfr = new BufferedReader(new InputStreamReader(MGUI.class.getResourceAsStream("CFG.INI")));
			String linea = null;
			while ((linea = bfr.readLine()) != null) {
				System.out.println(linea);
				if (linea.charAt(0) != '#') {
					String tipo = linea.split("=")[1];
					if (tipo.equals("mysqlJDBC")) {
						while ((linea = bfr.readLine()) != null && linea.charAt(0) != '#' && !linea.equals(
								"[mysqlJDC]")) {}
						String connectionURL;
						while ((linea = bfr.readLine()).charAt(0) == '#') {}
						connectionURL = linea.split("=")[1].trim();
						String bbdd;
						while ((linea = bfr.readLine()).charAt(0) == '#') {}
						bbdd = linea.split("=")[1].trim();
						String usuario;
						while ((linea = bfr.readLine()).charAt(0) == '#') {}
						usuario = linea.split("=")[1].trim();
						String pass;
						while ((linea = bfr.readLine()).charAt(0) == '#') {}
						pass = linea.split("=")[1].trim();
						con = new PersistenciaJdbc(connectionURL + "/" + bbdd, usuario, pass);
						break;
					} else if (tipo.equals("hibernate")) {
						while ((linea = bfr.readLine()) != null && !linea.equals(
								"[hibernate]")) {}
						String cfg;
						while ((linea = bfr.readLine()).charAt(0) == '#') {}
						cfg = linea.split("=")[1].trim();
						System.out.println(cfg);
						try {
						con = new PersistenciaHibernate(cfg);
						} catch (Exception e) {
							String mensaje = "El fichero CFG.INI está corrupto o mal configurado\n";
							notificaError(null, "ERROR EN LA CONEXION A LA BASE DE DATOS", e, mensaje);
							e.printStackTrace();
							System.exit(-1);
						}
						break;
					} else {
						String mensaje = "El fichero CFG.INI parece estar corrupto";
						notificaError(null, "ERROR EN LA CONEXION A LA BASE DE DATOS", null, mensaje);
						System.exit(-1);
					}
				}
			}
			
		}
		catch (IOException | ClassNotFoundException | SQLException e) {
			String mensaje = (e instanceof IOException) ? "El fichero CFG.INI parece estar corrupto"
					: (e instanceof ClassNotFoundException) ? "No se encuentra el conector a la Base de Datos"
							: "Error al conectar con la base de datos";
			notificaError(null, "ERROR EN LA CONEXION A LA BASE DE DATOS", e, mensaje);
			System.exit(-1);
		}
	}
	
	public static void notificaError(JFrame padre, String titulo, Exception e, String mensaje) {
		String contenido = "";
		if (mensaje != null) {
			contenido += mensaje;
		}
		if (e != null) {
			contenido += e.getClass().getName() + "\n" + e.getMessage(); // Tipo y mensaje de la excepción
		}
		JOptionPane.showMessageDialog(padre, contenido, titulo, JOptionPane.ERROR_MESSAGE);
	}
	
	public static int notifica(JFrame padre, String titulo, Exception e, String mensaje, int tipo) {
		String contenido = "";
		if (mensaje != null) {
			contenido += mensaje;
		}
		if (e != null) {
			contenido += e.getClass().getName() + "\n" + e.getMessage(); // Tipo y mensaje de la excepción
		}
		return JOptionPane.showConfirmDialog(padre, contenido, titulo, tipo);
	}
	
	/**
	 * Creates new form MGUI
	 */
	public MGUI() {
		initComponents();
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("¡Bienvenido al Gestor de Ligas de Fútbol!");

        jMenu1.setText("Gestión");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mantenimiento");

        jMenuItem1.setText("Equipos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Jugadores");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Posiciones");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Competiciones");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Salir");

        jMenuItem5.setText("Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jLabel1)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        System.exit(-1);
    }//GEN-LAST:event_jMenuItem5ActionPerformed
	
	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt){try {
		// GEN-FIRST:event_jMenuItem1ActionPerformed
		new GUIEquipos(this).setVisible(true);
		} catch (SQLException ex) {
			Logger.getLogger(MGUI.class.getName()).log(Level.SEVERE, null, ex);
		}
	}// GEN-LAST:event_jMenuItem1ActionPerformed
	
	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel.
		 * For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		
		inicializar();
		
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			
			public void run() {
				new MGUI().setVisible(true);
			}
		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    // End of variables declaration//GEN-END:variables
}
